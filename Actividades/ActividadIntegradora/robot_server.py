""" Robot Model Server

Runs a Flask server to send and receive information using 
JSON objects in order to exchange the agents' paths on each step
for waypoints to be generated by a third-party.
"""

__author__ = "Ra√∫l Youthan Irigoyen Osorio"

from flask import Flask, request, jsonify
from robot_agents import *
from robot_model import *


# Initial variables
agents = 5
width = 20
height = 20
boxes = 25
model = None
step = 0
depot_x = 2
depot_y = 2

# App initialization
app = Flask("Robot example")

# Route to initialize model
@app.route("/init", methods=["POST", "GET"])
def init_model():
    global agents, width, height, boxes, model, step, depot_x, depot_y
    if request.method == "POST":
        # Define model's initial variables
        agents = int(request.form.get("agents"))
        width = int(request.form.get("width"))
        height = int(request.form.get("height"))
        boxes = int(request.form.get("boxes"))
        depot_x = int(request.form.get("depot_x"))
        depot_y = int(request.form.get("depot_y"))
        step = 0
        # Initialize model
        model = RobotModel(agents, width, height, boxes, depot_x, depot_y)
        # Return JSON message if post method was OK
        return jsonify({"message": "accepted"})


# Get trajectories from robots
@app.route("/getRobotPath", methods=["GET"])
def get_robot_path():
    global model
    if request.method == "GET":
        robot_positions = [
            {"x": x, "y": 1, "z": z}
            for (a, x, z) in model.grid.coord_iter()
            if a.type_id == agt.ROBOT
        ]
        return jsonify({"robot_path": robot_positions})


# Get trajectories from boxes
@app.route("/getBoxPath", methods=["GET"])
def get_box_path():
    global model
    if request.method == "GET":
        box_positions = [
            {"x": x, "y": 1, "z": z}
            for (a, x, z) in model.grid.coord_iter()
            if a.type_id == agt.BOX
        ]
        return jsonify({"box_path": box_positions})


# Get trajectories from depots
@app.route("/getDepotPath", methods=["GET"])
def get_depot_path():
    global model
    if request.method == "GET":
        depot_positions = [
            {"x": x, "y": 1, "z": z}
            for (a, x, z) in model.grid.coord_iter()
            if a.type_id == agt.DEPOT
        ]
        return jsonify({"depot_path": depot_positions})


# Make model advance one step further
@app.route("/step", methods=["GET"])
def update_model():
    global model, step
    if request.method == "GET":
        model.step()
        step += 1
        return jsonify({"step": step})


if __name__ == "__main__":
    app.run(host="localhost", port=8585, debug=True)
